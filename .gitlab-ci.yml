stages:
  - build
  - deploy

variables: 
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
  DOCKER_HOST: tcp://docker:2376

build_job:
  tags: [ajsfront]
  stage: build
  only: ["dev"]
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind

  before_script:
    - docker info
    - echo 'building job is running'

  script: 
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - cp -f $ENV_FILE .env
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
    - docker rmi $TAG_COMMIT
    - docker rmi $TAG_LATEST

deploy_job:
  tags: [ajsfront]
  stage: deploy
  image: alpine:latest
  script:
    - chmod ag= $ID_RSA
    - apk update && apk add openssh-client
    - ssh - $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER$IP_SERVER "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
    - ssh - $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER$IP_SERVER "docker pull $TAG_COMMIT"
    - ssh - $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER$IP_SERVER "docker container rm -f my-app $TAG_COMMIT || true"
    - ssh - $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER$IP_SERVER "docker run -p 80:80 -d --name my-app $TAG_COMMIT"
  only: 
    - dev  
